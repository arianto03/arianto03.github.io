{"version":3,"sources":["assets/img/aneka-makanan.jpg","components/Navbar.js","components/Footer/Footer.js","components/CityCard.js","components/CityList.js","components/ImageAndWelcome.js","components/SearchCity.js","config/api.js","pages/Home.js","components/CategoryList.js","components/SearchKeyword.js","components/SearchCriteria.js","components/RatingLabel.js","components/RestaurantCard.js","pages/City.js","components/RestaurantProfile.js","components/Review.js","pages/RestaurantDetail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","Footer","href","class","CityCard","props","city","name","country_name","id","_renderCityList","cities","length","map","key","CityList","title","showSubtitle","subtitle","ImageAndWelcome","style","marginBottom","src","mainImage","width","height","alt","SearchCity","type","placeholder","value","onChange","onClick","onClickSearch","API","baseUrl","api_key","process","Home","changeKeywordHandler","event","setState","keyword","target","searchhandler","state","url","axios","get","headers","params","q","then","data","status","citiesResultSearch","location_suggestions","cityKeywordSearch","catch","err","console","log","getFeaturedCities","city_ids","featuredCities","this","marginTop","Component","CategoryList","categories","category","categorySelected","categoryClickHandler","SearchKeyword","onClickAddToCriteria","SearchCriteria","criteria","cri","index","criteriaName","aria-hidden","color","removeCriteriaHandler","RatingLabel","backgroundColor","labelColor","borderColor","text","RestaurantCard","restaurant","thumb","borderRadius","fontWeight","location","locality","address","user_rating","rating_color","aggregate_rating","rating_text","cuisines","currency","average_cost_for_two","textDecoration","City","searchHandler","restaurants","entity_id","entity_type","transformCategoriesData","getCityData","city_id","newCriteria","push","filter","addToCriteriahandler","splice","getCategoriesData","renderRestaurantList","match","RestaurantProfile","featured_image","Review","border","review","user","profile_image","foodie_level_num","foodie_level","foodie_color","review_time_friendly","rating","review_text","RestaurantDetail","getReviewsData","restaurant_id","res_id","reviews","user_reviews","getRestaurantData","App","path","exact","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","require","config"],"mappings":"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","file":"static/js/main.c7106d52.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aneka-makanan.8ba6661d.jpg\";","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navbar = () => (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary sticky-top\">\r\n        <Link className=\"navbar-brand text-white\" to=\"/\">\r\n            Food Paradise\r\n        </Link>\r\n    </nav>\r\n)\r\n\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => (\r\n    <footer className=\"my-footer\">\r\n        <div className=\"text-center\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-4 text-center\">\r\n                        <h5>About FoodParadise</h5>\r\n                        <ul>\r\n                            <li>\r\n                                <a href=\"/#\">About</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Contact Us</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-sm-4 text-center\">\r\n                        <h5>Support</h5>\r\n                        <ul>\r\n                            <li>\r\n                                <a href=\"/#\">FAQ</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Help Desk</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Forums</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-sm-4 text-center\">\r\n                        <h5>Download App</h5>\r\n                        <ul>\r\n                            <li>\r\n                                <a href=\"/#\">Google Play</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">App Store</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"social-networks\">\r\n                <a href=\"#\" className=\"twitter\">\r\n                    <i class=\"fa fa-twitter\"></i>\r\n                </a>\r\n                <a href=\"#\" className=\"facebook\">\r\n                    <i className=\"fa fa-facebook-official\"></i>\r\n                </a>\r\n                <a href=\"#\" className=\"google\">\r\n                    <i className=\"fa fa-google-plus\"></i>\r\n                </a>\r\n                <a href=\"#\" className=\"github\">\r\n                    <i className=\"fa fa-github\"></i>\r\n                </a>\r\n                <a href=\"#\" className=\"instagram\">\r\n                    <i className=\"fa fa-instagram\"></i>\r\n                </a>\r\n            </div>\r\n            <p className=\"footer-copyright\">Copyright &copy; 2020 FoodParadise </p>\r\n        </div>\r\n    </footer>\r\n)\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst CityCard = (props) =>(\r\n    <div className=\"col-4\">\r\n        <div className=\"card bg-light mb-3\">\r\n            <div className=\"card-body\">\r\n                <h3 className=\"card-title\">{props.city.name}</h3>\r\n                <p>{props.city.country_name}</p>\r\n                <Link to={`/city/${props.city.id}`} className=\"card-text\">\r\n                See Restaurants in {props.city.name}\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default CityCard;","import React from 'react';\r\nimport CityCard from './CityCard';\r\n\r\nconst CityList = (props) => (\r\n<>\r\n    <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h3>{ props.title }</h3>\r\n            {props.showSubtitle === true && props.subtitle != '' &&\r\n            <h6 className=\"text-muted\">\r\n              Search result for keyword \"{props.subtitle}\"</h6>}\r\n          </div>\r\n    </div>\r\n    <div className=\"row\">\r\n      {props.cities == null ? (\r\n        <div className=\"col\">\r\n          <p>Loading ...</p>\r\n        </div>\r\n      ) : (\r\n        _renderCityList(props.cities)\r\n      )}\r\n    </div>\r\n</>\r\n);\r\n\r\nconst _renderCityList = (cities) => {\r\n  if (cities.length > 0) {\r\n    return cities.map(city => <CityCard key={city.id} city={city} />);\r\n  } else {\r\n    return (\r\n      <div className=\"col\">\r\n        <p className=\"text-danger\">Data Not Found ...!</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CityList;","import React from 'react';\r\nimport mainImage from \"../assets/img/aneka-makanan.jpg\";\r\n\r\nconst ImageAndWelcome = () => (\r\n    <>\r\n    <div className=\"row\" style={{ marginBottom: 30}}>\r\n        <img src={mainImage} width=\"100%\" height=\"350px\" alt=\"Aneka Makanan\" />\r\n      </div>\r\n      \r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <div className=\"card mb-3 text-white text-center\">\r\n              <div className=\"card-header bg-success\"><h1>Welcome To Food Paradise</h1></div>\r\n              <div className=\"card-body bg-dark\">\r\n                <h4 className=\"card-title\">The Easiest Way to find Restaurants and Food in Indonesia</h4>\r\n                <p className=\"card-text\">You can grab information about Restourants, cafees, cuisine with just a few click.</p>\r\n                <p className=\"card-text\">Start by choosing the featured cities below, or search the city name.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </>\r\n)\r\n\r\nexport default ImageAndWelcome;","import React from 'react';\r\n\r\nconst SearchCity = (props) => (\r\n    <div className=\"row\" style={{ marginBottom: 30 }}>\r\n        <div className=\"col\">\r\n        <h3>Search City</h3>\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n            <div className=\"form-row\">\r\n                <div className=\"col-11\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Type keyword or city name\"\r\n                    value={props.value}\r\n                    onChange={props.onChange}\r\n                />\r\n                </div>\r\n                <div className=\"col-1\">\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    type=\"button\" \r\n                    onClick={props.onClickSearch}>Search\r\n                </button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>  \r\n    </div>\r\n)\r\n\r\n\r\nexport default SearchCity;","export const API = {\r\n    zomato: {\r\n        baseUrl: \"https://developers.zomato.com/api/v2.1\",\r\n        api_key: process.env.REACT_APP_API_KEY_ZOMATO\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport CityList from '../components/CityList';\r\nimport ImageAndWelcome from '../components/ImageAndWelcome';\r\nimport SearchCity from '../components/SearchCity';\r\nimport axios from 'axios';\r\nimport {API} from '../config/api';\r\n\r\nclass Home extends Component{\r\n    constructor () {\r\n        super();\r\n        this.state = {\r\n          keyword: \"\",\r\n          featuredCities: null,\r\n          citiesResultSearch: null,\r\n          cityKeywordSearch: \"\"\r\n        };\r\n      }\r\n      changeKeywordHandler = event =>{\r\n        this.setState({ keyword: event.target.value });\r\n      };\r\n      searchhandler = () => {\r\n        let keyword = this.state.keyword;\r\n        var url = `${API.zomato.baseUrl}/cities`;\r\n        axios\r\n        .get(url, {\r\n          headers: {\r\n            'user-key': API.zomato.api_key\r\n          },\r\n          params: {\r\n            q: keyword\r\n          }\r\n        }).then(({data}) => {\r\n          if (data.status === \"success\") {\r\n            this.setState({citiesResultSearch: data.location_suggestions, \r\n            keyword: \"\",\r\n            cityKeywordSearch: keyword});\r\n          }\r\n        }).catch(err => console.log(err));\r\n      };\r\n      getFeaturedCities = () => {\r\n        var url = `${API.zomato.baseUrl}/cities`;\r\n        axios\r\n        .get(url, {\r\n          headers: {\r\n            'user-key': API.zomato.api_key\r\n          },\r\n          params: {\r\n            city_ids: \"74, 11052, 170\"\r\n          }\r\n        })\r\n        .then(({data}) => {\r\n          if (data.status === \"success\") {\r\n            this.setState({ featuredCities: data.location_suggestions})\r\n          }\r\n        }).catch (err => console.log(err));\r\n      };\r\n      componentDidMount () {\r\n        this.getFeaturedCities();\r\n      }\r\n    render(){\r\n        return (\r\n        <>\r\n            <ImageAndWelcome />\r\n            \r\n          <div className=\"container\" style={{ marginTop: 30, marginBottom: 30 }}>\r\n            <CityList \r\n              cities={this.state.featuredCities} \r\n              title={\"Featured Cities\"}\r\n            />\r\n            <SearchCity value={this.state.keyword} \r\n            onChange={this.changeKeywordHandler} \r\n            onClickSearch={this.searchhandler}/>\r\n\r\n            \r\n\r\n            {this.state.cityKeywordSearch !== \"\" && (\r\n            <CityList \r\n            title={'Search Result'}\r\n            cities ={this.state.citiesResultSearch} \r\n            showSubtitle={true}\r\n            subtitle={this.state.cityKeywordSearch}\r\n            />\r\n            )}\r\n          </div>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst CategoryList = (props) => (\r\n    props.categories ? (\r\n        <div className=\"list-group\">\r\n            {props.categories.map(category => (\r\n                <button\r\n                key={category.id}\r\n                className={'list-group-item list-group-item-action ' + \r\n                (props.categorySelected && category.id === \r\n                    props.categorySelected.id ? 'active' : '')}\r\n                onClick={() => props.categoryClickHandler(category)}\r\n                >\r\n                {category.name}\r\n                </button>\r\n            ))}\r\n        </div>\r\n     ) : (\r\n         <p>Loading Wait...!</p>\r\n     )\r\n)\r\n\r\nexport default CategoryList;","import React from 'react';\r\n\r\nconst SearchKeyword = (props) => (\r\n <>\r\n    <h5>Keyword</h5>\r\n    <div className=\"card\">\r\n        <div className=\"card-body\">\r\n            <div className=\"form-row\">\r\n                <div className=\"col-10\">\r\n                    <input className=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Type keyword i.e: restaurant's name, location, cuisine, etc.\"\r\n                    value={props.keyword}\r\n                    onChange={props.changeKeywordHandler}/>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <button onClick={props.onClickAddToCriteria} className=\"btn btn-primary\" type=\"button\">\r\n                        Add to criteria\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n </>\r\n)\r\n\r\nexport default SearchKeyword;","import React from 'react';\r\n\r\nconst SearchCriteria = props => (\r\n    <>\r\n         <div className=\"card bg-light mb-3\" style={{marginTop: 20}}>\r\n            <div className=\"card-body\">\r\n                <p className=\"card-title\">\r\n                    Find Restaurants based on criteria:\r\n                </p>\r\n                <table className=\"table table-hover\">\r\n                    <tbody>\r\n                        {props.criteria.map((cri, index) => (\r\n                            <tr key={index} className=\"table-active\">\r\n                                <td width=\"40%\">{cri.criteriaName}</td>\r\n                                <td width=\"50%\">{cri.data.name}</td>\r\n                                <td width=\"10%\">\r\n                                    {cri.criteriaName !== \"City\" && (\r\n                                        <>\r\n                                        <a href=\"#\">\r\n                                        <i className=\"fa fa-times\"\r\n                                        aria-hidden=\"true\"\r\n                                        style={{color: \"red\"}}\r\n                                        onClick={() => props.removeCriteriaHandler(index)}/>\r\n                                        </a>\r\n                                        </>\r\n                                    )} \r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"pull-right\">\r\n                    <button className=\"btn btn-primary\" \r\n                    onClick={props.onClickSearch} \r\n                    type=\"button\">\r\n                        Search\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n)\r\n\r\nexport default SearchCriteria;","import React from 'react';\r\n\r\nconst RatingLabel = props => (\r\n   \r\n        <div className=\"btn btn-sm\"\r\n            style={{\r\n            color: 'white',\r\n            backgroundColor: `#${props.labelColor}`,\r\n            borderColor: `#${props.labelColor}`\r\n            }}>\r\n            {props.text}\r\n        </div>\r\n    \r\n)\r\n\r\nexport default RatingLabel;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport RatingLabel from './RatingLabel';\r\n\r\nconst RestaurantCard = props => (\r\n\r\n    <div className=\"col-6\" style={{ marginBottom: 20 }}>\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <img className=\"img-responsive\" \r\n                    src={props.restaurant.thumb} alt=\"\" \r\n                    style={{ borderRadius: 5, width: 100 }} ></img>\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <h4 className=\"text-success\" \r\n                        style={{ fontWeight: 800 }}>\r\n                        {props.restaurant.name}\r\n                    </h4>\r\n                    <h6>{props.restaurant.location.locality}</h6>\r\n                    <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Rating</td>\r\n                            <td>\r\n                                <RatingLabel\r\n                                    labelColor={props.restaurant.user_rating.rating_color}\r\n                                    text={`${props.restaurant.user_rating.aggregate_rating} \r\n                                        (${props.restaurant.user_rating.rating_text})`}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Cuisines</td>\r\n                            <td>\r\n                            {props.restaurant.cuisines}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Cost for two</td>\r\n                            <td>\r\n                            {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n            <div className=\"card-footer\">\r\n                <Link to={`/restaurant/${props.restaurant.id}`} style={{ textDecoration: 'none' }}>\r\n                    <button type=\"button\" className=\"btn btn-outline-info btn-block\">\r\n                    View Restaurant Details\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n)\r\n\r\nexport default RestaurantCard;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport { API } from '../config/api';\r\nimport CategoryList from '../components/CategoryList';\r\nimport SearchKeyword from '../components/SearchKeyword';\r\nimport SearchCriteria from '../components/SearchCriteria';\r\nimport RestaurantCard from '../components/RestaurantCard';\r\n\r\nclass City extends Component {\r\n    constructor (){\r\n        super();\r\n        this.state = {\r\n            city: null,\r\n            categories: null,\r\n            categorySelected: null,\r\n            keyword: \"\",\r\n            criteria: [],\r\n            restaurants: []\r\n        };\r\n    }\r\n    searchHandler = () => {\r\n        this.setState({restaurants: null})\r\n        let url = `${API.zomato.baseUrl}/search`\r\n        let params = {}\r\n        for (let  cri of this.state.criteria) {\r\n          switch (cri.criteriaName) {\r\n            case 'City' : \r\n              params.entity_id    = cri.data.id\r\n              params.entity_type  = 'city'\r\n              break\r\n            case 'Category' : \r\n              params.category     = cri.data.id\r\n              break\r\n            case 'Keyword' : \r\n              params.q            = cri.data.name\r\n              break\r\n            default : break\r\n          }\r\n        }\r\n        axios.get(url, {\r\n          headers: {\r\n            'user-key': API.zomato.api_key\r\n          },\r\n          params\r\n        })\r\n          .then(({ data }) => {\r\n            this.setState({ restaurants : data.restaurants })\r\n          })\r\n          .catch(err => console.log(err))\r\n      }\r\n    transformCategoriesData = categories => {\r\n        let categoriesTransformed = categories.map(category => {\r\n            return category.categories;\r\n        })\r\n        return categoriesTransformed;\r\n    }\r\n    getCityData = (city_id) => {\r\n        let url = `${API.zomato.baseUrl}/cities`;\r\n        axios.get(url, {\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            },\r\n            params: {\r\n                city_ids: `${city_id}`\r\n            }\r\n        }).then (({ data }) => {\r\n            let city = data.location_suggestions[0];\r\n\r\n            let newCriteria = {\r\n                criteriaName: 'City',\r\n                data: city\r\n            }\r\n\r\n            let criteria = [...this.state.criteria]\r\n            criteria.push(newCriteria);\r\n\r\n            this.setState({ city, criteria });\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n    componentDidMount() {\r\n        let { city_id } = this.props.match.params;\r\n        console.log(this.props.match);\r\n        this.getCityData(city_id);\r\n        this.getCategoriesData();\r\n    }\r\n    categoryClickHandler = (category) => {\r\n        let criteria = [...this.state.criteria]\r\n        criteria = criteria.filter(cri => cri.criteriaName !== \"Category\");\r\n        let newCriteria = {\r\n            criteriaName: 'Category',\r\n            data: category\r\n        }\r\n        criteria.push(newCriteria);\r\n        this.setState({categorySelected: category, criteria});\r\n    };\r\n    changeKeywordHandler = event => {\r\n        this.setState({keyword: event.target.value})\r\n    };\r\n    addToCriteriahandler = () => {\r\n        let criteria = [...this.state.criteria]\r\n        criteria = criteria.filter(cri => cri.criteriaName !== \"Keyword\")\r\n        let newCriteria = {\r\n            criteriaName: \"Keyword\",\r\n            data: {\r\n                name: this.state.keyword\r\n            }\r\n        }\r\n        criteria.push(newCriteria)\r\n        this.setState({keyword: \"\", criteria});\r\n    };\r\n    removeCriteriaHandler = index => {\r\n        let criteria = [...this.state.criteria];\r\n        criteria.splice(index, 1);\r\n        this.setState({ criteria });\r\n    };\r\n    getCategoriesData = () => {\r\n        let url = `${API.zomato.baseUrl}/categories`\r\n        axios.get(url, {\r\n            headers: {\r\n            'user-key': API.zomato.api_key\r\n            }\r\n        }).then(({ data }) => {\r\n            let categories = this.transformCategoriesData(data.categories);\r\n            this.setState({ categories });\r\n        }).catch(err => console.log(err))\r\n    };\r\n    renderRestaurantList = () => {\r\n        if(this.state.restaurants === null) {\r\n          return (\r\n            <div className=\"col\">\r\n              <p>Loading...</p> \r\n            </div>\r\n          )\r\n        }\r\n    \r\n        if(this.state.restaurants.length > 0) {\r\n          return (\r\n            this.state.restaurants.map(({ restaurant }) => (\r\n              <RestaurantCard key={restaurant.id} restaurant={restaurant} />\r\n            ))\r\n          )\r\n        } else {\r\n          return (\r\n            <div className=\"col\">\r\n              <p>No Data available. Please select criteria, and click Search</p>\r\n            </div>\r\n          )\r\n        }\r\n      };\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"container-fluid\" \r\n                    style={{ marginTop: 30, marginBottom: 30}}>\r\n                        {this.state.city && (\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <h4 className=\"text-success\">\r\n                                        Resturant in {this.state.city.name},{\" \"}\r\n                                        {this.state.city.country_name}\r\n                                    </h4>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h5>Categories</h5>\r\n                             <CategoryList categories = {this.state.categories}\r\n                             categorySelected = {this.state.categorySelected}\r\n                             categoryClickHandler = { (category)=>\r\n                                this.categoryClickHandler(category)}\r\n                                 />\r\n                        </div>\r\n                        <div className=\"col-9\">\r\n                            <SearchKeyword \r\n                            onClickAddToCriteria = {this.addToCriteriahandler}\r\n                            keyword ={this.state.keyword}\r\n                            changeKeywordHandler ={this.changeKeywordHandler}/>\r\n                            <SearchCriteria \r\n                            criteria={this.state.criteria}\r\n                            removeCriteriaHandler={(index) => this.removeCriteriaHandler(index)}\r\n                            onClickSearch={this.searchHandler}\r\n                            />\r\n                            <div className=\"row\">\r\n                                <div className=\"col\" style={{ marginBottom: 10 }}>\r\n                                    <h4 className=\"text-success\"><b>Restaurant List</b><hr/></h4>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                             {this.renderRestaurantList()}\r\n                            </div>\r\n                        </div>\r\n                    </div>                   \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default City;","import React from 'react';\r\nimport RatingLabel from './RatingLabel';\r\nimport { Link } from 'react-router-dom';\r\nimport City from '../pages/City';\r\n\r\nconst RestaurantProfile = (props) => (\r\n    <>\r\n    <div className=\"card\">\r\n        <div className=\"card-header\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    {\r\n                    props.restaurant ? (\r\n                        <>\r\n                        <h4 className=\"text-success\" style={{ fontWeight: 800 }}>{props.restaurant.name}</h4>\r\n                        <h6 style={{ fontWeight: 600 }}>{props.restaurant.location.locality}</h6>\r\n                        <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\r\n                        </>\r\n                    ) : (\r\n                        <p>Loading...</p>\r\n                    )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"card-body\">\r\n        {\r\n            props.restaurant ? (\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <img class=\"img-responsive\" src={props.restaurant.featured_image} alt=\"\" style={{ borderRadius: 5, width: 500 }} />\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                            <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Rating</td>\r\n                                    <td>\r\n                                    <RatingLabel\r\n                                        labelColor={props.restaurant.user_rating.rating_color}\r\n                                        text={`${props.restaurant.user_rating.aggregate_rating}(${props.restaurant.user_rating.rating_text})`}\r\n                                    />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Cuisines</td>\r\n                                    <td>\r\n                                        {props.restaurant.cuisines}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Cost for two</td>\r\n                                    <td>\r\n                                        {props.restaurant.currency + ', ' + props.restaurant.average_cost_for_two}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                            </table>\r\n                        </div>\r\n                </div>\r\n            ) : (\r\n                <p>Loading...</p>\r\n            )\r\n            }\r\n        </div>\r\n    </div>\r\n    </>\r\n)\r\n\r\nexport default RestaurantProfile;","import React from 'react';\r\nimport RatingLabel from './RatingLabel';\r\n\r\nconst Review = props => (\r\n    <div className=\"card border-success\" style={{marginBottom: 5}}>\r\n        <div className=\"card-body\">\r\n            <div className=\"row\" style={{ marginBottom: 20 }}>\r\n                <div className=\"col-1\" \r\n                style={{ border: '0px solid black' }}>\r\n                    <img class=\"img-responsive\" \r\n                    src={props.review.user.profile_image} alt=\"\" \r\n                    style={{ borderRadius: '50%', width: 80 }}></img>\r\n                </div>\r\n                <div className=\"col-11\" \r\n                style={{ border: '0px solid black' }}>\r\n                    <h6 className=\"font-weight-bold\">\r\n                        {props.review.user.name}\r\n                    </h6>\r\n                    <RatingLabel\r\n                        text={`${props.review.user.foodie_level_num} \r\n                        (${props.review.user.foodie_level})`}\r\n                        labelColor={`${props.review.user.foodie_color}`}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <h6 className=\"card-text text-muted\">\r\n                {props.review.review_time_friendly}\r\n            </h6>\r\n            <RatingLabel\r\n                text={`${props.review.rating} (${props.review.rating_text})`}\r\n                labelColor={`${props.review.rating_color}`}\r\n            />\r\n            <p className=\"card-text\">{props.review.review_text}</p>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Review;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {API} from '../config/api';\r\nimport RatingLabel from '../components/RatingLabel';\r\nimport RestaurantProfile from '../components/RestaurantProfile';\r\nimport Review from '../components/Review';\r\n\r\nclass RestaurantDetail extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            restaurant: null,\r\n            review: null\r\n        };\r\n    }\r\n    getReviewsData = (restaurant_id) => {\r\n        let url = `${API.zomato.baseUrl}/reviews`\r\n        axios.get(url, {\r\n          headers: {\r\n            'user-key': API.zomato.api_key\r\n          },\r\n          params: {\r\n            res_id: restaurant_id\r\n          }\r\n        }).then(({ data }) => {\r\n            this.setState({ reviews: data.user_reviews })\r\n          }).catch(err => console.log(err));\r\n    };\r\n    getRestaurantData = (restaurant_id) => {\r\n        let url = `${API.zomato.baseUrl}/restaurant`\r\n        axios.get(url, {\r\n          headers: {\r\n            'user-key': API.zomato.api_key\r\n          },\r\n          params: {\r\n            res_id: restaurant_id\r\n          }\r\n        }).then(({ data }) => {\r\n            this.setState({ restaurant: data });\r\n          }).catch(err => console.log(err));\r\n      };\r\n      componentDidMount () {\r\n        let { params } = this.props.match;\r\n        this.getRestaurantData(params.restaurant_id);\r\n        this.getReviewsData(params.restaurant_id);\r\n      }\r\n    render(){\r\n        return(\r\n            <>\r\n                <div className=\"container\" style={{ marginTop: 30, marginBottom: 30 }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\" style={{ marginBottom: 20 }}>\r\n                            <RestaurantProfile restaurant={this.state.restaurant}/>\r\n                            <div className=\"col-12\" style={{ marginBottom: 20}}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body\">\r\n                                        <h4 className=\"text-success\" style={{ fontWeight: 800}}>\r\n                                            Review\r\n                                        </h4>\r\n                                        {this.state.reviews ?(\r\n                                            this.state.reviews.map(({review}) => (\r\n                                                <Review review={review} key={review.id}  />\r\n                                            ))\r\n                                        ) : ( \r\n                                            <p>Loading ...</p>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RestaurantDetail;","import React, { Component } from 'react';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer/Footer';\nimport './App.css';\nimport Home from './pages/Home';\nimport City from './pages/City';\nimport RestaurantDetail from './pages/RestaurantDetail';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n   \n    return (\n      <Router>\n        <Navbar />\n        <Route path=\"/\" exact component={Home}></Route>\n        <Route path=\"/city/:city_id\" component={City} />\n        <Route path=\"/restaurant/:restaurant_id\" \n        component={RestaurantDetail} />\n        <Footer />\n      </Router>\n    );\n\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nrequire(\"dotenv\").config();\n"],"sourceRoot":""}